# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
#orbs:
  # Declare a dependency on the welcome-orb
#  welcome: circleci/welcome-orb@0.4.1
# Orchestrate or schedule a set of jobs
#workflows:
  # Name the workflow "welcome"
#  welcome:
    # Run the welcome/run job in its own container

attach-workspace: &attach-workspace
  attach_workspace:
    at: ~/support-me-mc

jobs:
  checkout-install-dependencies:
    working_directory: ~/support-me-mc
    machine: true
    steps:
      - checkout
      - run:
          name: Prepare workspace
          command: |
            rm -rf .git
            chmod -R ugo+rwx ~/support-me-mc
      - run:
          name: Install dependencies
          command: docker run --rm -w /support-me-mc -v $PWD:/support-me-mc circleci/node:8.11-stretch sh -c "npm install && chmod -R ugo+rwx ./node_modules"
      - persist_to_workspace:
          root: ~/support-me-mc
          paths:
            - .

  unit-tests:
    working_directory: ~/leave-ecuador
    parallelism: 3
    docker:
      - image: circleci/node:8.11-stretch
    steps:
      - *attach-workspace
      - run:
          name: Running unit tests
          command: |
            npm rebuild node-sass
            CI=true npm run run-test-coverage -- -u && chmod -R ugo+rwx ./coverage
      - run:
          name: Change paths in coverage file
          command: sed -i "s:/home/circleci/support-me-mc/:/usr/local/src/app/:g" ./coverage/lcov.info
      - persist_to_workspace:
          root: ~/support-me-mc
          paths:
            - ./coverage

workflows:
  version: 2.1
  scan_test_and_deploy:
    jobs:
      - checkout-install-dependencies
#      - security-scan:
#          requires:
#            - checkout-install-dependencies
#      - unit-tests:
#          requires:
#            - checkout-install-dependencies
#      - deploy-staging:
#          requires:
#            - security-scan
#            - unit-tests
#          filters:
#            branches:
#              only: master